sudo: required
language: node_js
node_js:
- '10'
env:
  matrix:
  - DOCKER_COMPOSE_VERSION=1.18.0
services:
- docker
before_install:
- cd dna-src
- npm install && npm run build
- cd ..
- cd ui-src
- npm install
- npm run build
- npm run start &
- cd ..
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
  -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin
- TARGETDIR=$(pwd) docker-compose up -d
- docker-compose ps
script:
- docker run --rm  -v "$(pwd):/holochain-ui" holochain/holochain-proto-node:latest bash -c "cd /holochain-ui; hcdev test"
- cd ui-automation
- npm install
- npm test
- curl http://localhost:4141
- cd ..
- cd ui-src
- npm run coverage
- npm run release:files
- PACKAGE_NAME=$(node -p -e "require('./package.json').name")
- PACKAGE_VERSION=$(node -p -e "require('./package.json').version")
- cd ..
- cd release
- ls
- zip -r $PACKAGE_NAME-$PACKAGE_VERSION.zip .
- pwd
- docker-compose kill
- docker-compose down

deploy:
  provider: releases
  api-key:
    secure: mxf8xEf1w4qQ+7dE21Mmjkmhn4APfx4tntqsMWRtQQ/Sqb7mP8QgGzHXIJyK275qvu0hA/27vp7Q9s7mG6cUHWCqQ3fx2Zc7qjL7CZIEKXKC3znh4JUcbAaS2DYPpWPNpAU/sbGHia7yW6c9pFN61vbMbZHXKJc+qHvh1agEeJ1GtmZcnpkHl71x447i2mjocuvYqs4eGQHdB/6nmHnS0dC1Ro6NS8VrW++gv+qNerMQhN6Y9M5YIq1jFx1vzAumIAGJ8VYZcOPACiQr4fThSaGLVpZm0FZmWrge+pjImPZURjmjflip1kIIE3ttxTEG2/mXCL4jLXE5TN/RtCEjulrTrkiv+5pI2txftasw1i6hY/NKNEJUAeEw8WiqTnDLLeV+EwxRTRozVtElZ4kwuOfRNyyPDLD2O6W0ONBkqV1Nel4eJp1+dsyeoNXxCaPzZdMKNHNe6jzmMrx7HNs3iNdy+8JlpIOJovEA1CglXqhiyJLbntePs+VrK4s4SyQ5R9szFABYS8LaajM3sj4Shw6BMp/wbFbkQyu1DDaY83EMtNX8XJ5fEqdtqc2ginGey94WHQo5XmtHMLTjpHDUs3WA2mhw0u/ZvoBXQ5UODxhcHUJrSm747apWKO3KrsTIHwd+yvNlHcAwdKxiGfppDUCsOgQLSHlgRFKuanS5Vds=
  file: "$PACKAGE_NAME-$PACKAGE_VERSION.zip"
  skip_cleanup: true
  on:
    tags: true
    branch: master
